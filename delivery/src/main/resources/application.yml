server:
  port: 8080
---

spring:
  profiles: default

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://kjworlddb01.caayby7upwt3.ap-northeast-2.rds.amazonaws.com:25432/postgres
    username: postgres
    password: rlwjd25

  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        ddl-auto: update
        temp:
          use_jdbc_metadata_defaults: false
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: delivery
          destination: flowerdelivery
          contentType: application/json
        event-out:
          destination: flowerdelivery
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug
server:
  port: 8084
---

spring:
  profiles: docker
  
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://kjworlddb01.caayby7upwt3.ap-northeast-2.rds.amazonaws.com:25432/postgres
    username: postgres
    password: rlwjd25
    
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: delivery
          destination: flowerdelivery
          contentType: application/json
        event-out:
          destination: flowerdelivery
          contentType: application/json
